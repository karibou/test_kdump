#cloud-config
{% if do_update %}
# Update apt database on first boot
# (ie run apt-get update)
#
# Default: true
# Aliases: apt_update
package_update: true
{% endif %}
{% if do_upgrade %}
# Upgrade the instance on first boot
# (ie run apt-get upgrade)
#
# Default: false
# Aliases: apt_upgrade
package_upgrade: true
{% endif %}
hostname: test-kdump
manage_etc_hosts: true
{% if use_proxy %}
apt_proxy: http://192.168.0.13:8000
{% endif %}

ssh_import_id: [louis-bouchard]


#apt_sources:
#  - source: "ppa:louis-bouchard/networked-kdump"

write_files:
-   encoding: b64
    content: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbm9OdmlRWnR2VHZhYnQrMzRRMnlEN255bjgycFVjYTFXZEc5cHl0N1lGdUozWWdLCllzK3NteTF0T24zTEZJRlRjek5ya29KbU91cnhSRDA1ZlN3cFRoZ0hOMnc3YXBPaGZ1dnkrNVNRTGJHc0Vxbk0KazR3c0FybFFSYWNUUmx2ZHovSE0yNHlWTHhCeWMrcVVVc1pEbTVMV2pUM2l0ajBDa1lseHc0ajJwRmdYN1lQYQpGSjkxa3pqd1lteHRlRGdMUmhwcXZnK2svY3BkT0c3RU4vNVNYZjYzRDlXK3pCSGkzdUd0N1BZRXRvbURBdS8xCjhUNW5FaTQyZEtWRUJmOUVOVC92cU1WWVhTK0MvdHNjVkc2SDIvSXdWN1NNUHRYcVhxL1FGbFBFM0ZqUVdWS04KWE5pamovVHcxMGE0S1BtVWo1cDZKaGxlQnNLVkdqUlM1Rk9TcHdJREFRQUJBb0lCQUZXZkdYZ2lpTlJXcUQ2TAppWDkvTGxkZ1ViWVFHUTJiRUFwY1NOMHJsNUVNNFFOUW9JdVBNZVVBUEtnRG10YVFwTXJ0VTRYbitlQ0pWNWxNCm1Pa01HYU9kUndpZzVkZER0MUFma3poaG54K1BnU3J6blJWMSthL2UrWVVtSWpzM0ZERm1vd2xVZnFEVmVYMHoKa0xyRmJXOXplWUVCbEp4cmlCK2s1bGFBZlBsMzRvLzhGbHByWEFhViszczJxRXVXd05NeEhJNGNuRzlURE16RgpmdGFwT2o0c2hCcmoyS2g1Tnc2NjVqVW1aMDRlRTFhTHpjT2Y0d1dST1MyQlhyVkxtbTZ5MWhvNWF5QnErNklvCm1NbXdWSElWTnNROXNRUnBMWitnZnFneWlBNE4rWVpzWHlxcU4xVkdpNStKSyt3MGRlaGY3RzVqUkdSbmo0RDEKclhRa3NjRUNnWUVBekRlanhnYTMzZWFsb0hvTkk2Y3NaVEtleHkzVHl5eDRNSUJUdEdlbEZYU3Z4MDFQZTZBUwpYaTAxNDNhSEFPdkpYdmF1ZVdudjhCNDQ3MVJ2dzZ4cmEzYTNmdTFLVTNrTVRNZ09aTVpQRnlmdEhuanJ1b1JiCndMMTdFVkV5TGljeGt0Smw0RTFPQmh5U0E3SVU0NjdaM0VpbGtCdDV4N0FwV2F3UmY2MHVCbE1DZ1lFQXhyVUUKYkE5SDN3MEFoaHQvdC9QaFJMSDhpWmZOMm9xU0E4S3RIV0VZdWFXaEVrMXVIS3NXZlVvS3YvMnBMczFRcGJpYgpQa2hoR21nSjRmTXVUQTl6YzIxRTVCelp6VGtqTHJhOWV2ZG9TbkhodHlWa0R4aHFMakc4bU1GcmhlME51dXU0ClIwM1cyZHBoVzVuS3RmTVhqQm1zWTdnQzVxUUpDTEIwd2F3NXo5MENnWUVBcmhYRU01d29neTRLQk1ubWgzMEwKMkZ5Vmc1OXFTMmxtTDVwRlFLV1YwYnQ5Mkx6cnc2d0ozR1JYNnNad2dYVitYTWlXcFFPTXVUbGFPWkxXRDR6YwpxV2d6TmkwYnpocURSTFRKcUZod3RZR2duZmhnb3NnUDJ6YnJRVERoUVB6Q1FyRytqTDM1aERZNHRwUEpRT29kCjU2MjZEU1dPNDQ0bFFiN3Z6OUlXU09jQ2dZRUFoZjFLSGhPdnd4aGhZZ3pvOG9IaFJSRS8yUWdrSjFtSlhEL0oKdkNYZEpsSXBhczRMa2dsTUFQQU1qNm5jaTFLbkx4aHNsbkw0QjNaZ001eG5lNkp2bDBYM1RscW1BMXlqL0x2OAp5UTVMcE9kbDdMbXAzd1AzbFc2MFhjMFBWQitsUW9Yd25TUS8zR2NGZjE4VThkd1o1TDdySDlMVklmRTZwa0ZXCmVjSkl1WUVDZ1lCbEI1SEMvaXVnOUJvMnNNNERucWVTd2RCeG5tR2ZjT3Z2T0czL29DcEdNTm0rczFjaCs5Z0kKaDJJU1o4SlYxOWduL2thaGFuR2JhMWYydUF2dlB3Q2lrT05MZkRwV2d3dmRYSXhaVVo4NmNuaENvWTJsWXJvRgpaU2ZhMmloWjNWTWNSZE9qS01JZlo3VDNXc2h0VktiV0ZmdVk2OUZZMmtvM25qUUZhQWVMK2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
    owner: root:root
    path: /root/.ssh/kdump_id_rsa
    permissions: '0600'
-   encoding: b64
    content: 
    owner: root:root
    path: /etc/init.d/kdump-test-script.py
    permissions: '0750'

packages:
 - nfs-kernel-server
 - makedumpfile
 - kdump-tools
 - crash

runcmd:
{% if distrib[0] == 'debian' %}
# Debian specific commands.
# Needed to avoid kexec reboot on Debian
 - touch /tmp/no-kexec-reboot
 - [ sed, -i, 's/115200/115200 crashkernel=128M/', /etc/default/grub ]
{% elif distrib[0] == 'ubuntu' %}
# Ubuntu specific commands.
 - [ sed, -i, 's/crashkernel=384M-2G:64M/crashkernel=384M-2G:128M/', /etc/grub.d/10_linux ]
{% endif %}
# Test specific toggles
{% if networked == false %}
 - echo "LOCAL_ONLY=1" > /etc/default/kdump-test-script
{% endif %}
{% if results == false %}
 - echo "NO_RESULT=1" >> /etc/default/kdump-test-script
{% endif %}
{% if distrib[0] == 'debian' %}
 - echo "REMOTE_USER=root" >> /etc/default/kdump-test-script
{% endif %}
#
 - echo "StrictHostKeyChecking no" > /root/.ssh/config
 - ln -s /etc/init.d/kdump-test-script.py /etc/rc2.d/S99kdump-test-script.py

power_state:
 delay: now
 mode: reboot
 message: Rebooting after crashdump setup
